说明：

php设计模式---代理模式


分类： 

远程代理:  远程通信(客户端+服务端)
虚拟代理:  根据需要将资源消耗很大的对象进行延迟，真正需要的时候进行创建
           (在还未真正创建之前，可以使用一个等性质的东西来代替它)
智能引用代理: (火车票代售点)  ***
保护代理:  权限控制





代理模式实现---静态代理

静态代理： 代理和被代理对象在代理之前是确定的。他们都实现相同的接口或继承相同的抽象类


多掌握几门语言的重要性之一： 各种语言有它们各自最适合的使用场景和最擅长的能力


# 聚合比继承更适合代理模式(聚合的灵活性好)






java中的动态代理(java独有)：

JDK动态代理：
1. 只能代理实现了接口的类
2. 没有实现接口的类不能实现JDK的动态代理‘

CGLIB动态代理：
1. 针对类来实现代理
2. 对指定目标类产生一个子类，通过方法拦截技术拦截所有父类方法的调用 

# 这两种动态代理的方式，只能在java中实现，因为它们都使用了java中系统提供的东西(类、接口或jar包)






动态代理实现：
通过Proxy类的newProxyInstance方法返回代理对象
1. 声明一段源码: 动态产生代理
2. 编译源码(JDK Compiler API)，产生新的类(代理类)
3. 将这个类load到内存当中，产生一个新的对象(代理对象)
4. return代理对象
