让我们重新审视代码，看看该如何进行抽象。
在错误处理中，需要处理不同类型的错误，每个具体的错误具有特定于自己本身的一些信息，
但是它们在概念层面上又是一致的，
比如：都可以通过特定的方法接口获取自已内部的错误信息，每一个错误都有自己的处理方法。
由此可以得到一个初步的方案：可以定义一个抽象的错误基类，在这个基类里面定义一些在概念上适用于所有不同的具体错误的方法，
每个具体的错误可以有自己的不同的对于这些方法的实现