责任链模式：

定义：使多个对象都有机会处理请求，从而避免请求的发送者和接受者之间的耦合关系。
           将这个对象连成一条链，并沿着这条连传递该请求，直到有一个对象处理该请求为止

在这种情况下，发出这个请求的客户端并不知道这当中的哪一个对象最终处理这个请求，
这样 系统的更改可以在不影响客户端的情况下动态的重新组织和分配责任


优点：
1. 请求者不需要知道到底是哪个对象处理了请求，这种做法 使得接收者和发送者都没有对方的明确信息，
      且链中的对象自己也不知道链的结构。结果是职责链可简化对象的相互连接，它们仅需保持一个指向其后继者的引用，
      而不需要保持它所有的候选接受者的引用（降低了耦合）
2. 由于是在客户端来定义职责链的结构，所以可以随时增加或修改处理一个请求的结构，增强了给对象指派职责的灵活性


注意： 一个请求可能到了链的末端都得不到处理，或者因为没有正确配置而得不到处理， 故这点需要事先谨慎考虑全面


联系生活：
上面的注意 与现实生活中的"推脱责任"这种情况 很类似，如果一个公司在对某个事务的处理者规定不清楚的情况下，
那么在真正要处理这个事务时，可能就会出现"你推给我、我推给他"这种相互推脱责任的问题。 
而如果当初公司就把每个员工的职责指派清楚明确了，那么在处理事务时，就不会出现"推脱责任"的情况了，而是大家各司其职、井然有序
该你处理的事务，就自己处理；否则交给其他员工来进行处理